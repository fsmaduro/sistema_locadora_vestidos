ALTER TABLE TABAGENDA
ADD SMS_ENVIADO INTEIRO;;

CREATE TABLE TABCONTOLESINCAGENDA (
    USERNAME VC100 NOT NULL,
    IDAGENDA INTEGER NOT NULL,
    SINCRONIZADO INTEGER);;

ALTER TABLE TABCONTOLESINCAGENDA
ADD CONSTRAINT PK_TABCONTOLESINCAGENDA
PRIMARY KEY (USERNAME,IDAGENDA);;

CREATE trigger tabagenda_ai0 for tabagenda
active after insert position 0
AS
begin
  Delete from TABCONTOLESINCAGENDA s where s.idagenda = new.codigo;
  Insert into tabcontolesincagenda Select cAST(c.username AS VARCHAR(100)), new.codigo, 0 from tabcontassincagenda c;
end;;

CREATE trigger tabagenda_au0 for tabagenda
active after update position 0
AS
begin
  Delete from TABCONTOLESINCAGENDA s where s.idagenda = new.codigo;
  Insert into tabcontolesincagenda Select cAST(c.username AS VARCHAR(100)), new.codigo, 0 from tabcontassincagenda c;
end;;

CREATE TABLE TABPEDIDOAGENDAMENTOEVENTOS(
CODIGO INTEIRO NOT NULL,
ID INTEIRO NOT NULL,
CODIGOEVENTO INTEIRO,
DATAEVENTO DATE,
HORARIOEVENTO INTEIRO,
LOCALEVENTO VC200 );;

ALTER TABLE TABPEDIDOAGENDAMENTOEVENTOS ADD PRIMARY KEY(CODIGO,ID);;

ALTER TABLE TABACOMPANHANTESPEDIDOAGENDA ADD IDEVENTO INTEIRO;;

ALTER TABLE TABAGENDA ADD IDEVENTO INTEIRO;;

ALTER TABLE TABPREFERENCIASPESSOAS DROP CONSTRAINT PK_TABPREFERENCIASPESSOAS;;

ALTER TABLE TABPREFERENCIASPESSOAS ADD ID INTEIRO DEFAULT 0 NOT NULL;;

ALTER TABLE TABPREFERENCIASPESSOAS
ADD CONSTRAINT PK_TABPREFERENCIASPESSOAS
PRIMARY KEY (CODIGOPESSOA,CODIGOPREFERENCIA,CODIGOPEDIDO,ID)
USING INDEX PK_TABPREFERENCIASPESSOAS;;

CREATE OR ALTER procedure PROC_PRODUTO_COMPATIVEL_PEDIDO (
    CODIGOPRODUTO integer,
    CODIGOPEDIDO integer,
    CODIGOPERFIL integer,
    ID integer)
returns (
    RESULTADO integer)
as
declare variable XPREFERENCIA integer;
declare variable XTIPO integer;
declare variable XOLDTIPO integer;
declare variable XRETORNO integer;
declare variable XTMPRETORNO integer;
declare variable REPROVADO integer;
declare variable XTIPOMANEQUIM integer;
declare variable VLRMANEQUIM numeric(15,2);
begin
  xtmpretorno = -1;
  XRETORNO = 0;
  Reprovado = 0;

  for Select PRF.codigopreferencia, PRF.tipo from tabpreferenciaspessoas prf
       where codigopedido = :CODIGOPEDIDO
         and codigopessoa = :CODIGOPERFIL
         and COALESCE(id,0) = :ID
       order by 2,1
  into xPreferencia, xTipo
  do
  begin

    if ((XTMPRETORNO = 0) and (xoldtipo <> xtipo)) then
      Reprovado = 1;

    if ((((xoldtipo = xtipo) and (XTMPRETORNO = 0)) or
       ((xoldtipo <> xtipo) and (XTMPRETORNO = 1)) or
       (xtmpretorno = -1)) and (Reprovado = 0)) then
    begin
        select COUNT(*) from tabpreferenciasproduto prfp
         where prfp.codigoproduto = :codigoproduto
           and prfp.codigopreferencia = :xPreferencia
          into XTMPRETORNO;
    
        if (XTMPRETORNO > 0) then
          XRETORNO = 1;
        else
          XRETORNO = 0;
    end
    xoldtipo = xtipo;

  end

  -- verificando manequim
  if (xretorno = 1) then
  begin
      For Select pm.codigotipomanequim, pm.valor
            from tabpessomanequim pm
            left join tabtipomanequim tm on pm.codigotipomanequim = tm.codigo
           where tm.aplicacao = 3
             and pm.codigoperfil = :codigoperfil
      into xTipoManequim, vlrManequim
      do
      begin
        if (xretorno = 1) then
        begin
          Select Count(*) from tabprodutomanequim prm
           where prm.codigotipomanequim = :xTipoManequim
             and ((:vlrManequim between prm.valorinicial - 2 and prm.valorfinal + 2) or (:vlrManequim = prm.valorinicial))
             and prm.codigoproduto = :codigoproduto
            into XTMPRETORNO;
    
            if (XTMPRETORNO > 0) then
              XRETORNO = 1;
            else
              XRETORNO = 0;
        end
      end
  end

  RESULTADO = xretorno;

  suspend;
end;;

CREATE OR ALTER trigger tabagenda_au0 for tabagenda
active after update position 0
AS
begin
  if ((new.sincronizada <> 1) or (old.sincronizada = 1)) then
  begin
      Delete from TABCONTOLESINCAGENDA s where s.idagenda = new.codigo;
      Insert into tabcontolesincagenda Select cAST(c.username AS VARCHAR(100)), new.codigo, 0 from tabcontassincagenda c;
  end
end;;

create or alter procedure PROC_FORMAT_DATA_BRASIL (
    XDATA date)
returns (
    RETORNO varchar(10))
as
declare variable DIA varchar(2);
declare variable MES varchar(2);
declare variable ANO varchar(5);
begin
  /* Procedure Text */
  select EXTRACT(DAY FROM :Xdata),
         EXTRACT(MONTH FROM :Xdata),
         EXTRACT(YEAR FROM :Xdata) from RDB$DATABASE INTO :DIA, :MES, :ANO;

  if (Cast(dia as integer) < 10) then
    DIA = '0'||DIA;

  if (Cast(MES as integer) < 10) then
    MES = '0'||MES;

  Retorno = dia ||'/'|| mes ||'/'|| ano;
  suspend;
end;;

CREATE OR ALTER trigger tabagenda_au0 for tabagenda
active before update position 0
AS
begin
  if (new.sincronizada = old.sincronizada) then
   new.sincronizada = 0;

  if (new.sincronizada < 1) then
  begin
      Delete from TABCONTOLESINCAGENDA s where s.idagenda = new.codigo;
      Insert into tabcontolesincagenda Select cAST(c.username AS VARCHAR(100)), new.codigo, 0 from tabcontassincagenda c;
  end
end;;


DROP VIEW VIEW_HISTORICOPRODUTO;;


CREATE VIEW VIEW_HISTORICOPRODUTO(
    DATAINICIO,
    DATAFIM,
    DATAHORAINICIO,
    DATAHORAFINAL,
    TIPO,
    NOMETIPO,
    CODIGOCLIENTE,
    NOMECLIENTE,
    CODIGOPRODUTO,
    NOMEPRODUTO,
    CODIGOREGISTRO,
    OBSERVACOES,
    REFERENCIA)
AS
SELECT X.DATAINICIO, X.DATAFIM,
       X.DATAHORAINICIO, X.DATAHORAFINAL, X.TIPO,
       CASE X.TIPO
         WHEN 1 THEN 'AGENDA'
         WHEN 2 THEN 'ALUGUEL'
         WHEN 3 THEN 'ORDEM DE SERVICO'
       END AS NOMETIPO,

       X.CODIGOCLIENTE, C.NOME AS NOMECLIENTE,

       X.CODIGOPRODUTO, P.DESCRICAO AS NOMEPRODUTO,

       X.CODIGOREGISTRO, X.OBSERVACOES,

       P.REFERENCIA


FROM (

SELECT A.DATA AS DATAINICIO, A.DATAFIM,
       CAST(A.DATA + A.HORA AS TIMESTAMP) AS DATAHORAINICIO,
       CAST(A.DATAFIM + A.HORAFIM AS TIMESTAMP) AS DATAHORAFINAL,
       1 AS TIPO,
       A.IDPERFIL CODIGOCLIENTE,
       D.CODIGOPRODUTO,

   A.CODIGO AS CODIGOREGISTRO,

   A.descricao AS OBSERVACOES

FROM TABAGENDA A
INNER JOIN TABARARA AR ON (A.CODIGO = AR.CODIGOAGENDA)
INNER JOIN TABARARADETALHE D ON (AR.CODIGO = D.CODIGOARARA)

WHERE A.situacao = 3




UNION ALL


SELECT C.DATARESERVA AS DATAINICIO, C.DATARETORNO AS DATAFIM,

       (CAST(C.DATARESERVA + C.HORARESERVA AS TIMESTAMP)) -
       CASE
         WHEN PR.CODIGOPREFERENCIA IS NULL THEN
           COALESCE(C.DIASBLOQUEIOAUTOMATICO,0)
       ELSE 0
       END AS DATAHORAINICIO,

       (CAST(C.DATARETORNO + C.HORARETORNO AS TIMESTAMP)) +
       CASE
         WHEN PR.CODIGOPREFERENCIA IS NULL THEN
           COALESCE(C.DIASBLOQUEIOAUTOMATICO,0)
       ELSE 0
       END AS DATAHORAFINAL,
       2 AS TIPO,
       C.CODIGOCLIENTE,
       D.CODIGOPRODUTO,

       C.CODIGO AS CODIGOREGISTRO,

       C.OBSERVACOES


 FROM TABCONTRATO C
INNER JOIN TABCONTRATODETALHE D ON (C.CODIGO = D.CODIGO)
 LEFT JOIN TABSITUACAOPRODUTO S ON (C.CODIGOSITUACAO = S.CODIGO)
 LEFT JOIN TABPREFERENCIASPRODUTO PR ON (D.CODIGOPRODUTO = PR.CODIGOPRODUTO AND PR.TIPO = 2)

 WHERE c.codigosituacao <> 4

UNION ALL


SELECT O.DATAINICIO, O.DATAFIM,
       CAST(O.DATAINICIO + O.HORAINICIO AS TIMESTAMP) AS DATAHORAINICIO,
       CAST(COALESCE(D.DATAFIM,O.DATAFIM) + COALESCE(D.HORAFIM,O.HORAFIM) AS TIMESTAMP) DATAHORAFINAL,
       3 TIPO,
       O.CODIGOPERFIL AS CODIGOCLIENTE,
       D.CODIGOPRODUTO,

       O.CODIGO AS CODIGOREGISTRO,

       O.OBSERVACOES


  FROM TABOS O
 INNER JOIN TABOSDETALHE D ON (O.CODIGO = D.CODIGOOS)


) X

LEFT JOIN TABPERFIL C ON (X.CODIGOCLIENTE = C.CODIGO)
LEFT JOIN TABPRODUTOS P ON (X.CODIGOPRODUTO = P.CODIGO)

ORDER BY 9, 3;;


CREATE OR ALTER procedure PROC_PRODUTO_COMPATIVEL_PEDIDO (
    CODIGOPRODUTO integer,
    CODIGOPEDIDO integer,
    CODIGOPERFIL integer,
    ID integer)
returns (
    RESULTADO integer)
as
declare variable XPREFERENCIA integer;
declare variable XTIPO integer;
declare variable XOLDTIPO integer;
declare variable XRETORNO integer;
declare variable XTMPRETORNO integer;
declare variable REPROVADO integer;
declare variable XTIPOMANEQUIM integer;
declare variable VLRMANEQUIM numeric(15,2);
begin
  xtmpretorno = -1;
  XRETORNO = 0;
  Reprovado = 0;

  for Select PRF.codigopreferencia, PRF.tipo from tabpreferenciaspessoas prf
       where codigopedido = :CODIGOPEDIDO
         and codigopessoa = :CODIGOPERFIL
         and COALESCE(id,0) = :ID
       order by 2,1
  into xPreferencia, xTipo
  do

  if (xTipo <> 2) then
  begin
    if ((XTMPRETORNO = 0) and (xoldtipo <> xtipo)) then
      Reprovado = 1;

    if ((((xoldtipo = xtipo) and (XTMPRETORNO = 0)) or
       ((xoldtipo <> xtipo) and (XTMPRETORNO = 1)) or
       (xtmpretorno = -1)) and (Reprovado = 0)) then
    begin
        select COUNT(*) from tabpreferenciasproduto prfp
         where prfp.codigoproduto = :codigoproduto
           and prfp.codigopreferencia = :xPreferencia
          into XTMPRETORNO;
    
        if (XTMPRETORNO > 0) then
          XRETORNO = 1;
        else
          XRETORNO = 0;
    end
    xoldtipo = xtipo;

  -- verificando manequim
  if (xretorno = 1) then
  begin
      For Select pm.codigotipomanequim, pm.valor
            from tabpessomanequim pm
            left join tabtipomanequim tm on pm.codigotipomanequim = tm.codigo
           where tm.aplicacao = 3
             and pm.codigoperfil = :codigoperfil
      into xTipoManequim, vlrManequim
      do
      begin
        if (xretorno = 1) then
        begin
          Select Count(*) from tabprodutomanequim prm
           where prm.codigotipomanequim = :xTipoManequim
             and ((:vlrManequim between prm.valorinicial - 2 and prm.valorfinal + 2) or (:vlrManequim = prm.valorinicial))
             and prm.codigoproduto = :codigoproduto
            into XTMPRETORNO;
    
            if (XTMPRETORNO > 0) then
              XRETORNO = 1;
            else
              XRETORNO = 0;
        end
      end
  end

  end
  else
  begin
    if (XRETORNO = 0) then
    begin
        select COUNT(*) from tabpreferenciasproduto prfp
         where prfp.codigoproduto = :codigoproduto
           and prfp.codigopreferencia = :xPreferencia
          into XTMPRETORNO;
        
        if (XTMPRETORNO > 0) then
          XRETORNO = 1;
        else
          XRETORNO = 0;
    end
  end

  RESULTADO = xretorno;

  suspend;
end;;

CREATE TABLE TABCONTROLEPESQUISA (
    TABELA VC50 NOT NULL,
    TITULO VC50);;

ALTER TABLE TABCONTROLEPESQUISA
ADD CONSTRAINT PK_TABCONTROLEPESQUISA
PRIMARY KEY (TABELA);;

CREATE TABLE TABCONTROLEPESQUISACAMPOS (
    TABELA VC50 NOT NULL,
    ORDEM INTEGER,
    FIELDNAME VC50 NOT NULL,
    TITULO VC50);;

ALTER TABLE TABCONTROLEPESQUISACAMPOS
ADD CONSTRAINT PK_TABCONTROLEPESQUISACAMPOS
PRIMARY KEY (TABELA,FIELDNAME);;

ALTER TABLE TABCONTROLEPESQUISA
ADD CAMPOPESQUISAINCREMENTAL VC50;;

CREATE OR ALTER trigger tabprodutofotos_au0 for tabprodutofotos
active after delete position 0
AS
begin
  update TABPRODUTOFOTOS f set f.ID = f.ID - 1 where f.CODIGOPRODUTO = old.CODIGOPRODUTO and f.ID > old.ID;
end;;

ALTER TABLE TABAGENDA
ADD EMAIL_ENVIADO INTEIRO;;

CREATE OR ALTER trigger tabagenda_au0 for tabagenda
active before update position 0
AS
begin
  if (new.sincronizada = old.sincronizada) then
    new.sincronizada = 0;

  if (new.email_enviado = old.email_enviado) then
    new.email_enviado = 0;

  if (new.sincronizada < 1) then
  begin
      Delete from TABCONTOLESINCAGENDA s where s.idagenda = new.codigo;
      Insert into tabcontolesincagenda Select cAST(c.username AS VARCHAR(100)), new.codigo, 0 from tabcontassincagenda c;
  end
end;;


CREATE VIEW VIEWHISTORICOPRODUTO(
    DATAINICIO,
    DATAFIM,
    DATAHORAINICIO,
    DATAHORAFINAL,
    TIPO,
    NOMETIPO,
    CODIGOCLIENTE,
    NOMECLIENTE,
    CODIGOPRODUTO,
    NOMEPRODUTO,
    CODIGOREGISTRO,
    OBSERVACOES,
    REFERENCIA)
AS
SELECT X.DATAINICIO, X.DATAFIM,
       X.DATAHORAINICIO, X.DATAHORAFINAL, X.TIPO,
       CASE X.TIPO
         WHEN 1 THEN 'AGENDA'
         WHEN 2 THEN 'ALUGUEL'
         WHEN 3 THEN 'ORDEM DE SERVICO'
       END AS NOMETIPO,

       X.CODIGOCLIENTE, C.NOME AS NOMECLIENTE,

       X.CODIGOPRODUTO, P.DESCRICAO AS NOMEPRODUTO,

       X.CODIGOREGISTRO, X.OBSERVACOES,

       P.REFERENCIA


FROM (

SELECT A.DATA AS DATAINICIO, A.DATAFIM,
       CAST(A.DATA + A.HORA AS TIMESTAMP) AS DATAHORAINICIO,
       CAST(A.DATAFIM + A.HORAFIM AS TIMESTAMP) AS DATAHORAFINAL,
       1 AS TIPO,
       A.IDPERFIL CODIGOCLIENTE,
       D.CODIGOPRODUTO,

   A.CODIGO AS CODIGOREGISTRO,

   A.descricao AS OBSERVACOES

FROM TABAGENDA A
INNER JOIN TABARARA AR ON (A.CODIGO = AR.CODIGOAGENDA)
INNER JOIN TABARARADETALHE D ON (AR.CODIGO = D.CODIGOARARA)

WHERE A.situacao = 3




UNION ALL


SELECT C.DATARESERVA AS DATAINICIO, C.DATARETORNO AS DATAFIM,

       (CAST(C.DATARESERVA + C.HORARESERVA AS TIMESTAMP)) -
       CASE
         WHEN PR.CODIGOPREFERENCIA IS NULL THEN
           COALESCE(C.DIASBLOQUEIOAUTOMATICO,0)
       ELSE 0
       END AS DATAHORAINICIO,

       (CAST(C.DATARETORNO + C.HORARETORNO AS TIMESTAMP)) +
       CASE
         WHEN PR.CODIGOPREFERENCIA IS NULL THEN
           COALESCE(C.DIASBLOQUEIOAUTOMATICO,0)
       ELSE 0
       END AS DATAHORAFINAL,
       2 AS TIPO,
       C.CODIGOCLIENTE,
       D.CODIGOPRODUTO,

       C.CODIGO AS CODIGOREGISTRO,

       C.OBSERVACOES


 FROM TABCONTRATO C
INNER JOIN TABCONTRATODETALHE D ON (C.CODIGO = D.CODIGO)
 LEFT JOIN TABSITUACAOPRODUTO S ON (C.CODIGOSITUACAO = S.CODIGO)
 LEFT JOIN TABPREFERENCIASPRODUTO PR ON (D.CODIGOPRODUTO = PR.CODIGOPRODUTO AND PR.TIPO = 2)

 WHERE c.codigosituacao <> 4

UNION ALL


SELECT O.DATAINICIO, O.DATAFIM,
       CAST(O.DATAINICIO + O.HORAINICIO AS TIMESTAMP) AS DATAHORAINICIO,
       CAST(COALESCE(D.DATAFIM,O.DATAFIM) + COALESCE(D.HORAFIM,O.HORAFIM) AS TIMESTAMP) DATAHORAFINAL,
       3 TIPO,
       O.CODIGOPERFIL AS CODIGOCLIENTE,
       D.CODIGOPRODUTO,

       O.CODIGO AS CODIGOREGISTRO,

       O.OBSERVACOES


  FROM TABOS O
 INNER JOIN TABOSDETALHE D ON (O.CODIGO = D.CODIGOOS)


) X

LEFT JOIN TABPERFIL C ON (X.CODIGOCLIENTE = C.CODIGO)
LEFT JOIN TABPRODUTOS P ON (X.CODIGOPRODUTO = P.CODIGO)

ORDER BY 9, 3;;


CREATE trigger tabcontrato_ad0 for tabcontrato
active after delete position 0
AS
begin
  DELETE FROM TABCONTRATODETALHE WHERE CODIGO = OLD.CODIGO;
  DELETE FROM TABMOVIMENTACAOCONTRATO WHERE CODIGO = OLD.CODIGO;
  DELETE FROM TABCONTRATOPREVISAO WHERE CODIGO = OLD.CODIGO;
end;;

CREATE OR ALTER PROCEDURE PRC_RETORNADIASUTEIS (
    DATAINICIO DATE,
    DATAFIM DATE)
RETURNS (
    QTD INTEGER)
AS
DECLARE VARIABLE DIAS DATE;
BEGIN
      QTD = 0;
      DIAS = DATAINICIO;
      IF (DATAFIM > DIAS) THEN
      BEGIN
        WHILE (DATAFIM > DIAS) DO
        BEGIN
        IF ((EXTRACT(WEEKDAY FROM DIAS)+1) NOT IN (1,7)) THEN
          QTD = QTD +1;

        DIAS = DIAS + 1;
        END
      END
      ELSE
      BEGIN
        DIAS = DATAFIM;
        WHILE (DATAINICIO > DIAS) DO
        BEGIN
            IF ((EXTRACT(WEEKDAY FROM DIAS)+1) NOT IN (1,7)) THEN
             QTD = QTD +1;

            DIAS = DIAS + 1;
        END
        QTD = QTD * (-1);
      END
      QTD = COALESCE(QTD, 0);
      SUSPEND;
END;;


CREATE TABLE TABPAINEIS
(
CODIGO INTEIRO NOT NULL,
DATA DATA,
NOMERELATORIO VC100,
NOMEARQUIVO VC100,
DETALHEARQUIVO BLOB,
TELA VC100,
COMPONENTE VC100
);;


ALTER TABLE TABPAINEIS ADD PRIMARY KEY(CODIGO);;


CREATE INDEX TABCONTRATODETALHE_IDX1
ON TABCONTRATODETALHE (CODIGO);;

CREATE INDEX TABCONTRATO_IDX1
ON TABCONTRATO (CODIGOSITUACAO);;

CREATE INDEX TABOSDETALHE_IDX1
ON TABOSDETALHE (CODIGOOS);;


INSERT INTO TABPERFIL (CODIGO, DATACADASTRO, NOME, SEXO, NASCIMENTO, CODIGOMUNICIPIONATURALIDADE,
                       ESTADOCIVIL, CODIGOTIPODOCUMENTO, NUMERODOCUMENTO, ORGAOEMISSOR, UFDOCUMENTO,
                       CPF, CEP, NUMERO, COMPLEMENTO, TELRESIDENCIAL, TELCELULAR, TELCOMERCIAL, TELRECADO,
                       PESSOARECADO, EMAIL1, FACEBOOK, INSTAGRAM, WHATSAPP, OUTRO, PONTUALIDADE, CODIGOUSUARIO,
                       CODIGOTIPOPERFIL, ZELO, URLFOTO, VERCAO, CODIGOBANCO, AGENCIA, OPERACAO_CONTA, NUMERO_CONTA,
                       NOME_CLIENTE, CPF_CLIENTE_BANCO, CODIGOSITUACAO, PREFERENCIAS, INFOCOMPLEMENTO)
               VALUES (-1, '2015-04-24', 'PERFIL PADRAO', 'M', '1985-10-26', 22, NULL, 1, '', '', '', '', '', 24, NULL, '', '', '', NULL,
                       NULL, '', '', '', '', NULL, NULL, 3, 10, NULL, NULL, 6, 2, '', NULL,
                       '', '', '', NULL, NULL, NULL);;

INSERT INTO TABPRODUTOS (CODIGO, DATA, DESCRICAO, CODIGOUSUARIO, DETALHE, ORIGEM, IDPERFIL, DATAAQUISICAO,
                         VALOR1, VALOR2, VALOR3, VALOR4, VALORALUGUEL1, VALORALUGUEL2, VALORALUGUEL3, VALORALUGUEL4,
                         VERSAO, VIDAUTIL, PORCENTAGEM_TERCEIRO, CODIGOSITUACAO, REFERENCIA)
                 VALUES (-1, '2015-05-19', 'PRODUTO PADRAO', 2, 'PRODUTO PADRAO', 'T', 1, NULL, NULL, NULL, NULL, NULL,
                         690, NULL, NULL, NULL, 27, NULL, NULL, NULL, '');;

DELETE
  FROM TABCONTRATODETALHE D
 WHERE NOT EXISTS(SELECT * FROM TABCONTRATO C WHERE D.CODIGO = C.CODIGO);;

UPDATE TABCONTRATO C
   SET C.CODIGOCLIENTE = -1
 WHERE NOT EXISTS(SELECT * FROM TABPERFIL P WHERE C.CODIGOCLIENTE = P.CODIGO);;

UPDATE TABCONTRATODETALHE C
   SET C.CODIGOPRODUTO = -1
 WHERE NOT EXISTS(SELECT * FROM TABPRODUTOS P WHERE C.CODIGOPRODUTO = P.CODIGO);;

UPDATE TABAGENDA C
  SET C.IDPERFIL = -1
 WHERE NOT EXISTS(SELECT * FROM TABPERFIL P WHERE C.IDPERFIL = P.CODIGO);;

UPDATE TABACOMPANHANTESPEDIDOAGENDA C
  SET C.CODIGOPERFIL = -1
 WHERE NOT EXISTS(SELECT * FROM TABPERFIL P WHERE C.CODIGOPERFIL = P.CODIGO);;

DELETE
  FROM TABPEDIDOAGENDAMENTOEVENTOS AC
 WHERE NOT EXISTS(SELECT * FROM tabpedidoagendamento A WHERE A.CODIGO = AC.CODIGO);;

DELETE
  FROM TABACOMPANHANTESPEDIDOAGENDA AC
 WHERE NOT EXISTS(SELECT * FROM tabpedidoagendamento A WHERE A.CODIGO = AC.CODIGOPEDIDO);;


ALTER TABLE TABCONTRATO ADD CONSTRAINT FK_TABCONTRATO_CODIGOCOLIENTE FOREIGN KEY(CODIGOCLIENTE) REFERENCES TABPERFIL(CODIGO);;

ALTER TABLE TABAGENDA ADD CONSTRAINT FK_TABAGENDA_CODIGOCOLIENTE FOREIGN KEY(IDPERFIL) REFERENCES TABPERFIL(CODIGO);;

ALTER TABLE TABACOMPANHANTESPEDIDOAGENDA ADD CONSTRAINT FK_PEDIDOAGENDA_CODIGOCOLIENTE FOREIGN KEY(CODIGOPERFIL) REFERENCES TABPERFIL(CODIGO);;

ALTER TABLE TABCONTRATODETALHE ADD CONSTRAINT FK_DETALHE_CODIGOPRODUTO FOREIGN KEY(CODIGOPRODUTO) REFERENCES TABPRODUTOS(CODIGO);;


CREATE trigger tabpedidoagendamento_ad0 for tabpedidoagendamento
active after delete position 0
AS
begin
  DELETE FROM TABPEDIDOAGENDAMENTOEVENTOS WHERE CODIGO = OLD.CODIGO;
  DELETE FROM TABACOMPANHANTESPEDIDOAGENDA WHERE CODIGOPEDIDO = OLD.CODIGO;
  DELETE FROM tabpreferenciaspessoas WHERE CODIGOPEDIDO = OLD.CODIGO;
end;;

ALTER TABLE TABCONTRATODETALHE ADD DEVOLVIDO INTEGER;;

ALTER TABLE TABCONTRATODETALHE ADD DATAHORADEVOLUCAO TIMESTAMP;;

ALTER TABLE TABCONTRATODETALHE ADD USUARIODEVOLUCAO INTEGER;;

ALTER TABLE TABOSDETALHE ADD DEVOLVIDO INTEGER;;

ALTER TABLE TABOSDETALHE ADD DATAHORADEVOLUCAO TIMESTAMP;;

ALTER TABLE TABOSDETALHE ADD USUARIODEVOLUCAO INTEGER;;


DROP VIEW VIEWHISTORICOPRODUTO;;

CREATE VIEW VIEWHISTORICOPRODUTO(
    DATAINICIO,
    DATAFIM,
    DATAHORAINICIO,
    DATAHORAFINAL,
    TIPO,
    NOMETIPO,
    CODIGOCLIENTE,
    NOMECLIENTE,
    CODIGOPRODUTO,
    NOMEPRODUTO,
    CODIGOREGISTRO,
    OBSERVACOES,
    REFERENCIA,
    DEVOLVIDO)
AS
SELECT X.DATAINICIO, X.DATAFIM,
       X.DATAHORAINICIO, X.DATAHORAFINAL, X.TIPO,
       CASE X.TIPO
         WHEN 1 THEN 'AGENDA'
         WHEN 2 THEN 'ALUGUEL'
         WHEN 3 THEN 'ORDEM DE SERVICO'
       END AS NOMETIPO,

       X.CODIGOCLIENTE, C.NOME AS NOMECLIENTE,

       X.CODIGOPRODUTO, P.DESCRICAO AS NOMEPRODUTO,

       X.CODIGOREGISTRO, X.OBSERVACOES,

       P.REFERENCIA, X.DEVOLVIDO


FROM (

SELECT A.DATA AS DATAINICIO, A.DATAFIM,
       CAST(A.DATA + A.HORA AS TIMESTAMP) AS DATAHORAINICIO,
       CAST(A.DATAFIM + A.HORAFIM AS TIMESTAMP) AS DATAHORAFINAL,
       1 AS TIPO,
       A.IDPERFIL CODIGOCLIENTE,
       D.CODIGOPRODUTO,

   A.CODIGO AS CODIGOREGISTRO,

   A.descricao AS OBSERVACOES,

   0 DEVOLVIDO

FROM TABAGENDA A
INNER JOIN TABARARA AR ON (A.CODIGO = AR.CODIGOAGENDA)
INNER JOIN TABARARADETALHE D ON (AR.CODIGO = D.CODIGOARARA)

WHERE A.situacao = 3




UNION ALL


SELECT C.DATARESERVA AS DATAINICIO, C.DATARETORNO AS DATAFIM,

       (CAST(C.DATARESERVA + C.HORARESERVA AS TIMESTAMP)) -
       CASE
         WHEN PR.CODIGOPREFERENCIA IS NULL THEN
           COALESCE(C.DIASBLOQUEIOAUTOMATICO,0)
       ELSE 0
       END AS DATAHORAINICIO,

       (CAST(C.DATARETORNO + C.HORARETORNO AS TIMESTAMP)) +
       CASE
         WHEN PR.CODIGOPREFERENCIA IS NULL THEN
           COALESCE(C.DIASBLOQUEIOAUTOMATICO,0)
       ELSE 0
       END AS DATAHORAFINAL,
       2 AS TIPO,
       C.CODIGOCLIENTE,
       D.CODIGOPRODUTO,

       C.CODIGO AS CODIGOREGISTRO,

       C.OBSERVACOES,

       COALESCE(D.DEVOLVIDO,0) AS DEVOLVIDO


 FROM TABCONTRATO C
INNER JOIN TABCONTRATODETALHE D ON (C.CODIGO = D.CODIGO)
 LEFT JOIN TABSITUACAOPRODUTO S ON (C.CODIGOSITUACAO = S.CODIGO)
 LEFT JOIN TABPREFERENCIASPRODUTO PR ON (D.CODIGOPRODUTO = PR.CODIGOPRODUTO AND PR.TIPO = 2)

 WHERE c.codigosituacao <> 4

UNION ALL


SELECT O.DATAINICIO, O.DATAFIM,
       CAST(O.DATAINICIO + O.HORAINICIO AS TIMESTAMP) AS DATAHORAINICIO,
       CAST(COALESCE(D.DATAFIM,O.DATAFIM) + COALESCE(D.HORAFIM,O.HORAFIM) AS TIMESTAMP) DATAHORAFINAL,
       3 TIPO,
       O.CODIGOPERFIL AS CODIGOCLIENTE,
       D.CODIGOPRODUTO,

       O.CODIGO AS CODIGOREGISTRO,

       O.OBSERVACOES,

       CASE
         WHEN (D.DEVOLVIDO = 1) OR (D.DATAFIM IS NOT NULL) THEN 1
       ELSE
         0
       END DEVOLVIDO


  FROM TABOS O
 INNER JOIN TABOSDETALHE D ON (O.CODIGO = D.CODIGOOS)


) X

LEFT JOIN TABPERFIL C ON (X.CODIGOCLIENTE = C.CODIGO)
LEFT JOIN TABPRODUTOS P ON (X.CODIGOPRODUTO = P.CODIGO)

ORDER BY 9, 3;;

ALTER TABLE TABOS
ADD DETALHAMENTO VC200;;

ALTER TABLE TABOSDETALHE
ADD CODIGOSERVICO INTEIRO;;

ALTER TABLE TABCONTRATO
ADD DIASBLOQUEIOAUTOMATICOAPOS INTEIRO;;

update tabcontrato set DIASBLOQUEIOAUTOMATICOAPOS = DIASBLOQUEIOAUTOMATICO where DIASBLOQUEIOAUTOMATICOAPOS is null;;

DROP VIEW VIEWHISTORICOPRODUTO;;

CREATE VIEW VIEWHISTORICOPRODUTO(
    DATAINICIO,
    DATAFIM,
    DATAHORAINICIO,
    DATAHORAFINAL,
    TIPO,
    NOMETIPO,
    CODIGOCLIENTE,
    NOMECLIENTE,
    CODIGOPRODUTO,
    NOMEPRODUTO,
    CODIGOREGISTRO,
    OBSERVACOES,
    REFERENCIA,
    DEVOLVIDO)
AS
SELECT X.DATAINICIO, X.DATAFIM,
       X.DATAHORAINICIO, X.DATAHORAFINAL, X.TIPO,
       CASE X.TIPO
         WHEN 1 THEN 'AGENDA'
         WHEN 2 THEN 'ALUGUEL'
         WHEN 3 THEN 'ORDEM DE SERVICO'
       END AS NOMETIPO,

       X.CODIGOCLIENTE, C.NOME AS NOMECLIENTE,

       X.CODIGOPRODUTO, P.DESCRICAO AS NOMEPRODUTO,

       X.CODIGOREGISTRO, X.OBSERVACOES,

       P.REFERENCIA, X.DEVOLVIDO


FROM (

SELECT A.DATA AS DATAINICIO, A.DATAFIM,
       CAST(A.DATA + A.HORA AS TIMESTAMP) AS DATAHORAINICIO,
       CAST(A.DATAFIM + A.HORAFIM AS TIMESTAMP) AS DATAHORAFINAL,
       1 AS TIPO,
       A.IDPERFIL CODIGOCLIENTE,
       D.CODIGOPRODUTO,

   A.CODIGO AS CODIGOREGISTRO,

   A.descricao AS OBSERVACOES,

   0 DEVOLVIDO

FROM TABAGENDA A
INNER JOIN TABARARA AR ON (A.CODIGO = AR.CODIGOAGENDA)
INNER JOIN TABARARADETALHE D ON (AR.CODIGO = D.CODIGOARARA)

WHERE A.situacao = 3




UNION ALL


SELECT C.DATARESERVA AS DATAINICIO, C.DATARETORNO AS DATAFIM,

       (CAST(C.DATARESERVA + C.HORARESERVA AS TIMESTAMP)) -
       CASE
         WHEN PR.CODIGOPREFERENCIA IS NULL THEN
           COALESCE(C.DIASBLOQUEIOAUTOMATICO,0)
       ELSE 0
       END AS DATAHORAINICIO,

       (CAST(C.DATARETORNO + C.HORARETORNO AS TIMESTAMP)) +
       CASE
         WHEN PR.CODIGOPREFERENCIA IS NULL THEN
           COALESCE(C.DIASBLOQUEIOAUTOMATICOAPOS,0)
       ELSE 0
       END AS DATAHORAFINAL,
       2 AS TIPO,
       C.CODIGOCLIENTE,
       D.CODIGOPRODUTO,

       C.CODIGO AS CODIGOREGISTRO,

       C.OBSERVACOES,

       COALESCE(D.DEVOLVIDO,0) AS DEVOLVIDO


 FROM TABCONTRATO C
INNER JOIN TABCONTRATODETALHE D ON (C.CODIGO = D.CODIGO)
 LEFT JOIN TABSITUACAOPRODUTO S ON (C.CODIGOSITUACAO = S.CODIGO)
 LEFT JOIN TABPREFERENCIASPRODUTO PR ON (D.CODIGOPRODUTO = PR.CODIGOPRODUTO AND PR.TIPO = 2)

 WHERE c.codigosituacao <> 4

UNION ALL


SELECT O.DATAINICIO, O.DATAFIM,
       CAST(O.DATAINICIO + O.HORAINICIO AS TIMESTAMP) AS DATAHORAINICIO,
       CAST(COALESCE(D.DATAFIM,O.DATAFIM) + COALESCE(D.HORAFIM,O.HORAFIM) AS TIMESTAMP) DATAHORAFINAL,
       3 TIPO,
       O.CODIGOPERFIL AS CODIGOCLIENTE,
       D.CODIGOPRODUTO,

       O.CODIGO AS CODIGOREGISTRO,

       O.OBSERVACOES,

       CASE
         WHEN (D.DEVOLVIDO = 1) OR (D.DATAFIM IS NOT NULL) THEN 1
       ELSE
         0
       END DEVOLVIDO


  FROM TABOS O
 INNER JOIN TABOSDETALHE D ON (O.CODIGO = D.CODIGOOS)


) X

LEFT JOIN TABPERFIL C ON (X.CODIGOCLIENTE = C.CODIGO)
LEFT JOIN TABPRODUTOS P ON (X.CODIGOPRODUTO = P.CODIGO)

ORDER BY 9, 3
;;
