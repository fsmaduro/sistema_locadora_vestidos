ALTER TABLE TABAGENDA
ADD SMS_ENVIADO INTEIRO;;

CREATE TABLE TABCONTOLESINCAGENDA (
    USERNAME VC100 NOT NULL,
    IDAGENDA INTEGER NOT NULL,
    SINCRONIZADO INTEGER);;

ALTER TABLE TABCONTOLESINCAGENDA
ADD CONSTRAINT PK_TABCONTOLESINCAGENDA
PRIMARY KEY (USERNAME,IDAGENDA);;

CREATE trigger tabagenda_ai0 for tabagenda
active after insert position 0
AS
begin
  Delete from TABCONTOLESINCAGENDA s where s.idagenda = new.codigo;
  Insert into tabcontolesincagenda Select cAST(c.username AS VARCHAR(100)), new.codigo, 0 from tabcontassincagenda c;
end;;

CREATE trigger tabagenda_au0 for tabagenda
active after update position 0
AS
begin
  Delete from TABCONTOLESINCAGENDA s where s.idagenda = new.codigo;
  Insert into tabcontolesincagenda Select cAST(c.username AS VARCHAR(100)), new.codigo, 0 from tabcontassincagenda c;
end;;

CREATE TABLE TABPEDIDOAGENDAMENTOEVENTOS(
CODIGO INTEIRO NOT NULL,
ID INTEIRO NOT NULL,
CODIGOEVENTO INTEIRO,
DATAEVENTO DATE,
HORARIOEVENTO INTEIRO,
LOCALEVENTO VC200 );;

ALTER TABLE TABPEDIDOAGENDAMENTOEVENTOS ADD PRIMARY KEY(CODIGO,ID);;

ALTER TABLE TABACOMPANHANTESPEDIDOAGENDA ADD IDEVENTO INTEIRO;;

ALTER TABLE TABAGENDA ADD IDEVENTO INTEIRO;;

ALTER TABLE TABPREFERENCIASPESSOAS DROP CONSTRAINT PK_TABPREFERENCIASPESSOAS;;

ALTER TABLE TABPREFERENCIASPESSOAS ADD ID INTEIRO DEFAULT 0 NOT NULL;;

ALTER TABLE TABPREFERENCIASPESSOAS
ADD CONSTRAINT PK_TABPREFERENCIASPESSOAS
PRIMARY KEY (CODIGOPESSOA,CODIGOPREFERENCIA,CODIGOPEDIDO,ID)
USING INDEX PK_TABPREFERENCIASPESSOAS;;

CREATE OR ALTER procedure PROC_PRODUTO_COMPATIVEL_PEDIDO (
    CODIGOPRODUTO integer,
    CODIGOPEDIDO integer,
    CODIGOPERFIL integer,
    ID integer)
returns (
    RESULTADO integer)
as
declare variable XPREFERENCIA integer;
declare variable XTIPO integer;
declare variable XOLDTIPO integer;
declare variable XRETORNO integer;
declare variable XTMPRETORNO integer;
declare variable REPROVADO integer;
declare variable XTIPOMANEQUIM integer;
declare variable VLRMANEQUIM numeric(15,2);
begin
  xtmpretorno = -1;
  XRETORNO = 0;
  Reprovado = 0;

  for Select PRF.codigopreferencia, PRF.tipo from tabpreferenciaspessoas prf
       where codigopedido = :CODIGOPEDIDO
         and codigopessoa = :CODIGOPERFIL
         and COALESCE(id,0) = :ID
       order by 2,1
  into xPreferencia, xTipo
  do
  begin

    if ((XTMPRETORNO = 0) and (xoldtipo <> xtipo)) then
      Reprovado = 1;

    if ((((xoldtipo = xtipo) and (XTMPRETORNO = 0)) or
       ((xoldtipo <> xtipo) and (XTMPRETORNO = 1)) or
       (xtmpretorno = -1)) and (Reprovado = 0)) then
    begin
        select COUNT(*) from tabpreferenciasproduto prfp
         where prfp.codigoproduto = :codigoproduto
           and prfp.codigopreferencia = :xPreferencia
          into XTMPRETORNO;
    
        if (XTMPRETORNO > 0) then
          XRETORNO = 1;
        else
          XRETORNO = 0;
    end
    xoldtipo = xtipo;

  end

  -- verificando manequim
  if (xretorno = 1) then
  begin
      For Select pm.codigotipomanequim, pm.valor
            from tabpessomanequim pm
            left join tabtipomanequim tm on pm.codigotipomanequim = tm.codigo
           where tm.aplicacao = 3
             and pm.codigoperfil = :codigoperfil
      into xTipoManequim, vlrManequim
      do
      begin
        if (xretorno = 1) then
        begin
          Select Count(*) from tabprodutomanequim prm
           where prm.codigotipomanequim = :xTipoManequim
             and ((:vlrManequim between prm.valorinicial - 2 and prm.valorfinal + 2) or (:vlrManequim = prm.valorinicial))
             and prm.codigoproduto = :codigoproduto
            into XTMPRETORNO;
    
            if (XTMPRETORNO > 0) then
              XRETORNO = 1;
            else
              XRETORNO = 0;
        end
      end
  end

  RESULTADO = xretorno;

  suspend;
end;;

CREATE OR ALTER trigger tabagenda_au0 for tabagenda
active after update position 0
AS
begin
  if ((new.sincronizada <> 1) or (old.sincronizada = 1)) then
  begin
      Delete from TABCONTOLESINCAGENDA s where s.idagenda = new.codigo;
      Insert into tabcontolesincagenda Select cAST(c.username AS VARCHAR(100)), new.codigo, 0 from tabcontassincagenda c;
  end
end;;

create or alter procedure PROC_FORMAT_DATA_BRASIL (
    XDATA date)
returns (
    RETORNO varchar(10))
as
declare variable DIA varchar(2);
declare variable MES varchar(2);
declare variable ANO varchar(5);
begin
  /* Procedure Text */
  select EXTRACT(DAY FROM :Xdata),
         EXTRACT(MONTH FROM :Xdata),
         EXTRACT(YEAR FROM :Xdata) from RDB$DATABASE INTO :DIA, :MES, :ANO;

  if (Cast(dia as integer) < 10) then
    DIA = '0'||DIA;

  if (Cast(MES as integer) < 10) then
    MES = '0'||MES;

  Retorno = dia ||'/'|| mes ||'/'|| ano;
  suspend;
end;;

CREATE OR ALTER trigger tabagenda_au0 for tabagenda
active before update position 0
AS
begin
  if (new.sincronizada = old.sincronizada) then
   new.sincronizada = 0;

  if (new.sincronizada < 1) then
  begin
      Delete from TABCONTOLESINCAGENDA s where s.idagenda = new.codigo;
      Insert into tabcontolesincagenda Select cAST(c.username AS VARCHAR(100)), new.codigo, 0 from tabcontassincagenda c;
  end
end;;
