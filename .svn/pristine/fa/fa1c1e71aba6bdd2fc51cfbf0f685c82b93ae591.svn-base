unit form_principal;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, Buttons, ExtCtrls, Menus, StdCtrls, DBCtrls, ImgList, backup, Sockets;

type
  Tprincipal = class(TForm)
    Panel_btns_cad: TPanel;
    btnAlunos: TSpeedButton;
    btnCaixa: TSpeedButton;
    btnMaterialDidatico: TSpeedButton;
    btnMovAlunos: TSpeedButton;
    btnHistorico: TSpeedButton;
    btnSair: TSpeedButton;
    MainMenu1: TMainMenu;
    Operacional1: TMenuItem;
    Cadastros1: TMenuItem;
    Perfil: TMenuItem;
    Produto: TMenuItem;
    cadastro_usuario: TMenuItem;
    Rastreamento: TMenuItem;
    CCAA1: TMenuItem;
    Relatrios1: TMenuItem;
    Financeiro1: TMenuItem;
    Sair1: TMenuItem;
    trocade_usuario: TMenuItem;
    trocar_senha: TMenuItem;
    Timer1: TTimer;
    Municpios1: TMenuItem;
    ImageList1: TImageList;
    Backup1: TMenuItem;
    Ajuda1: TMenuItem;
    Empresa1: TMenuItem;
    Preferencias: TMenuItem;
    TipoFoto: TMenuItem;
    TipoDocumento: TMenuItem;
    TipoPerfil: TMenuItem;
    TipoManequim: TMenuItem;
    SituaodoProduto: TMenuItem;
    Banco: TMenuItem;
    Avaliao1: TMenuItem;
    SpeedButton1: TSpeedButton;
    Panel2: TPanel;
    lblUsuario: TLabel;
    lblData: TLabel;
    lblHora: TLabel;
    Image1: TImage;
    Panel4: TPanel;
    Panel1: TPanel;
    Evento: TMenuItem;
    TipoConvidado: TMenuItem;
    Questionrio1: TMenuItem;
    AcompanhaPedidoAgenda: TMenuItem;
    Agendas: TMenuItem;
    Prospect: TMenuItem;
    FormadePagamento1: TMenuItem;
    PaineldeOramento1: TMenuItem;
    Arara: TMenuItem;
    Servicos: TMenuItem;
    OrdemServico: TMenuItem;
    PaineldeContrato1: TMenuItem;
    Financeiro2: TMenuItem;
    HistricoProduto1: TMenuItem;
    PlanodeContas1: TMenuItem;
    CentrodeCustos1: TMenuItem;
    ApuraoMensal1: TMenuItem;
    ipoLanamento1: TMenuItem;
    PrevisoOramento1: TMenuItem;
    AcompanhamentoPrevistoRealizado1: TMenuItem;
    Backup2: TMenuItem;
    procedure btn_sairClick(Sender: TObject);
    procedure btnSairClick(Sender: TObject);
    procedure trocade_usuarioClick(Sender: TObject);
    procedure cadastro_usuarioClick(Sender: TObject);
    procedure trocar_senhaClick(Sender: TObject);
    procedure Sair1Click(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure Timer1Timer(Sender: TObject);
    procedure RastreamentoClick(Sender: TObject);
    procedure Municpios1Click(Sender: TObject);
    procedure btnAlunosClick(Sender: TObject);
    procedure FormActivate(Sender: TObject);
    procedure SituacaoProdutoClick(Sender: TObject);
    procedure Relatrios1Click(Sender: TObject);
    procedure Financeiro1Click(Sender: TObject);
    procedure Backup1Click(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure Ajuda1Click(Sender: TObject);
    procedure Empresa1Click(Sender: TObject);
    procedure PreferenciasClick(Sender: TObject);
    procedure TipoFotoClick(Sender: TObject);
    procedure TipoDocumentoClick(Sender: TObject);
    procedure TipoPerfilClick(Sender: TObject);
    procedure TipoManequimClick(Sender: TObject);
    procedure ProdutoClick(Sender: TObject);
    procedure BancoClick(Sender: TObject);
    procedure Avaliao1Click(Sender: TObject);
    procedure SpeedButton1Click(Sender: TObject);
    procedure EventoClick(Sender: TObject);
    procedure TipoConvidadoClick(Sender: TObject);
    procedure PedidoAgendaClick(Sender: TObject);
    procedure Questionrio1Click(Sender: TObject);
    procedure AcompanhaPedidoAgendaClick(Sender: TObject);
    procedure btnMovAlunosClick(Sender: TObject);
    procedure SituaodoProdutoClick(Sender: TObject);
    procedure AgendasClick(Sender: TObject);
    procedure ProspectClick(Sender: TObject);
    procedure btnMaterialDidaticoClick(Sender: TObject);
    procedure FormadePagamento1Click(Sender: TObject);
    procedure PaineldeOramento1Click(Sender: TObject);
    procedure AraraClick(Sender: TObject);
    procedure ServicosClick(Sender: TObject);
    procedure OrdemServicoClick(Sender: TObject);
    procedure PaineldeContrato1Click(Sender: TObject);
    procedure Financeiro2Click(Sender: TObject);
    procedure HistricoProduto1Click(Sender: TObject);
    procedure btnCaixaClick(Sender: TObject);
    procedure PlanodeContas1Click(Sender: TObject);
    procedure CentrodeCustos1Click(Sender: TObject);
    procedure ApuraoMensal1Click(Sender: TObject);
    procedure ipoLanamento1Click(Sender: TObject);
    procedure PrevisoOramento1Click(Sender: TObject);
    procedure AcompanhamentoPrevistoRealizado1Click(Sender: TObject);
    procedure Backup2Click(Sender: TObject);


  private
    ProcurouAniversariantes: Boolean;
    procedure AbilitarUsuario;
    procedure CarregaConfiguracoes();
    { Private declarations }
  public
    { Public declarations }
  end;

var
  principal: Tprincipal;



implementation

uses
  form_acesso_sistema, form_cadastro_usuarios, form_alterar_senha,
  untFiltroLog, form_cadastro_municipios, untDados,
  form_cadastro_dizimista, form_cadastro_comunidade,
  form_configuracoes, untBackup, form_cadastro_situacao_produto, form_cadastro_preferencia, form_cadastro_Tipo_Foto, Form_cadastro_tipo_documento,
  form_cadastro_Tipo_Perfil, form_cadastro_Tipo_Manequim, form_cadastro_perfil,
  form_cadastro_produto, form_cadastro_banco, form_cadastro_Avaliacao,
  form_cadastro_Evento, form_cadastro_Tipo_Convidado,
  form_cadastro_pedido_agenda, form_cadastro_questionario,
  untAcompanhaPedidoAgenda, untAgenda, form_cadastro_prospect, untOrcamento,
  form_cadastro_forma_pagamento, untAcompanhaOrcamento, untARARAS, untContrato,
  form_cadastro_Servicos, untOrdemServico, untAcompanhaOrdemServico,
  untFinanceiro, untContratoTerceiros, untAcompanhaContrato,
  untAcompanhaFinanceiro, untAcompanhaHistoricoProduto, untCadastroPlanoContas,
  untCadastroCentroCusto, untApuracaoMensal, untCadastroExplicacao,
  untPrevisaoOrcamento, untAcompanhaPrevistoRealizado, untConfigSincronismo;

{$R *.dfm}




procedure Tprincipal.btn_sairClick(Sender: TObject);
begin
  close;
end;

procedure Tprincipal.Financeiro1Click(Sender: TObject);
begin
  dados.ShowConfig(principal);
  CarregaConfiguracoes();
end;

procedure Tprincipal.Financeiro2Click(Sender: TObject);
begin
  If Application.FindComponent('frmAcompanhaFinanceiro') = Nil then
         Application.CreateForm(TfrmAcompanhaFinanceiro, frmAcompanhaFinanceiro);

  frmAcompanhaFinanceiro.Show;
end;

procedure Tprincipal.CarregaConfiguracoes();
begin
//  vHoraInicioExpediente   := Dados.Config(frmAgenda,'HORAINICIOEXPEDIENTE','Hora de Início do Expediente de Atendimento Diário',
//                                    'Informe a Hora que o expediente de trabalho é iniciado diáriamente para demontração resumida do calendário.',
//                                    StrToTime('08:00:00'),tcHora).vcTime;
end;

procedure Tprincipal.CentrodeCustos1Click(Sender: TObject);
begin
  If Application.FindComponent('frmCadastroCentroCusto') = Nil then
         Application.CreateForm(TfrmCadastroCentroCusto, frmCadastroCentroCusto);

  frmCadastroCentroCusto.Show;
end;

procedure Tprincipal.FormActivate(Sender: TObject);
begin
//  if not ProcurouAniversariantes then
//  begin
//    Dados.MostraAniversariantesDia(Date);
//    ProcurouAniversariantes := True;
//  end;
//
//  if dados.tblConfigTIPOENTIDADE.AsInteger = 1 then
//    Empresa1.Caption := '&Entidade'
//  else
//    Empresa1.Caption := '&Comunidade';

end;

procedure Tprincipal.FormadePagamento1Click(Sender: TObject);
begin
  if Application.FindComponent('cadastro_forma_pagamento') = Nil then
    Application.CreateForm(Tcadastro_forma_pagamento, cadastro_forma_pagamento);

  cadastro_forma_pagamento.Show;
end;

procedure Tprincipal.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  Dados.BackupSeguranca;
end;

procedure Tprincipal.FormCreate(Sender: TObject);
begin
  left := 0;
  top := 0;
end;

procedure Tprincipal.AbilitarUsuario;
var
 i: Integer;
begin
  for I := 0 to ComponentCount - 1 do
  begin
    if (Components[i] is TMenuItem) then
    begin
      if ((Components[i] as TMenuItem).Name = 'Menu1') or
         ((Components[i] as TMenuItem).Name = 'Sair1') or
         ((Components[i] as TMenuItem).Name = 'Ajuda1') then
        Continue;

      Dados.geral.sql.text := 'select ativo from tabpermicoesusuario where codigousuario = '+IntToStr(untdados.CodigoUsuarioCorrente)+' and nomemenu = '+
                                    #39+(Components[i] as TMenuItem).Name+#39;
      Dados.geral.Open;
       (Components[i] as TMenuItem).Visible := Dados.geral.FieldByName('ativo').AsInteger = 1;

       if (Components[i] as TMenuItem).Name = 'Alunos1' then
          btnAlunos.Visible := (Components[i] as TMenuItem).Visible
       else if (Components[i] as TMenuItem).Name = 'ContribuiodoDizimo1' then
          btnHistorico.Visible := (Components[i] as TMenuItem).Visible
       else if (Components[i] as TMenuItem).Name = 'ColetasdaComunidade1' then
          btnMaterialDidatico.Visible := (Components[i] as TMenuItem).Visible
       else if (Components[i] as TMenuItem).Name = 'urmasAbertas2' then
          btnCaixa.Visible := (Components[i] as TMenuItem).Visible
       else if (Components[i] as TMenuItem).Name = 'RecibosEmitidos1' then
          btnMovAlunos.Visible := (Components[i] as TMenuItem).Visible;

      Dados.geral.Close;
    end;
  end;
end;

procedure Tprincipal.FormShow(Sender: TObject);
//var
  //MaisdeUmaComunidade: boolean;
begin
  {If Application.FindComponent('acesso_sistema') = Nil then
         Application.CreateForm(Tacesso_sistema, acesso_sistema);

  acesso_sistema.ShowModal;

  dados.geral.sql.text := 'Select codigo from tabcomunidade';
  dados.geral.open;
  dados.geral.last;
  dados.geral.first;
    if dados.geral.RecordCount > 1 then
      dados.CodigoComunidadeCorrente := dados.DigitarValorBD('Selecione a Comunidade',
                                                        'TABCOMUNIDADE',
                                                        1,
                                                        'NOMECOMUNIDADE',
                                                        'CODIGO',
                                                        'NOMECOMUNIDADE')
    else
      dados.CodigoComunidadeCorrente := dados.geral.fieldbyname('codigo').AsInteger;
  dados.geral.Close;

  dados.qryComunidade.Close;
  dados.qryComunidade.Open;

  dados.CodigoTurnoCorrente := dados.DigitarValorBD('Selecione o Turno','TABTURNOS',1);
   }



  AbilitarUsuario;

end;

procedure Tprincipal.HistricoProduto1Click(Sender: TObject);
begin
  If Application.FindComponent('frmAcompanhaHistoricoProduto') = Nil then
         Application.CreateForm(TfrmAcompanhaHistoricoProduto, frmAcompanhaHistoricoProduto);

  frmAcompanhaHistoricoProduto.Show;
end;

procedure Tprincipal.ipoLanamento1Click(Sender: TObject);
begin
  If Application.FindComponent('frmCadastroExplicacao') = Nil then
         Application.CreateForm(TfrmCadastroExplicacao, frmCadastroExplicacao);

  frmCadastroExplicacao.Show;
end;

procedure Tprincipal.RastreamentoClick(Sender: TObject);
begin
  If Application.FindComponent('frmFiltroLog') = Nil then
         Application.CreateForm(TfrmFiltroLog, frmFiltroLog);

  frmFiltroLog.Show;
end;

procedure Tprincipal.Relatrios1Click(Sender: TObject);
begin
  application.MessageBox('EM DESENVOLVIMENTO','EM DESENVOLVIMENTO',MB_OK+MB_ICONEXCLAMATION);
  Abort;
//  If Application.FindComponent('frmFiltroFinanceiros') = Nil then
//         Application.CreateForm(TfrmFiltroFinanceiros, frmFiltroFinanceiros);
//
//  frmFiltroFinanceiros.Show;
end;

procedure Tprincipal.Sair1Click(Sender: TObject);
begin
  Close;
end;

procedure Tprincipal.ServicosClick(Sender: TObject);
begin
  If Application.FindComponent('cadastro_Tipo_Servicos') = Nil then
         Application.CreateForm(Tcadastro_Tipo_Servicos, cadastro_Tipo_Servicos);

  cadastro_Tipo_Servicos.Show;
end;

procedure Tprincipal.Timer1Timer(Sender: TObject);
var
strdiasemana : string;
begin
   case DayOfWeek(date) of
        1 : strdiasemana := 'Dom. ';
        2 : strdiasemana := 'Seg. ';
        3 : strdiasemana := 'Ter. ';
        4 : strdiasemana := 'Qua. ';
        5 : strdiasemana := 'Qui. ';
        6 : strdiasemana := 'Sex. ';
        7 : strdiasemana := 'Sáb. ';
   end;
lblData.Caption := strdiasemana + FormatDateTime('dd/mm/yy',date);
lblHora.Caption := FormatDateTime('hh:mm:ss',Time);
end;

procedure Tprincipal.TipoConvidadoClick(Sender: TObject);
begin
  If Application.FindComponent('cadastro_tipo_convidado') = Nil then
         Application.CreateForm(Tcadastro_tipo_convidado, cadastro_tipo_convidado);

  cadastro_tipo_convidado.Show;
end;

procedure Tprincipal.TipoDocumentoClick(Sender: TObject);
begin
  If Application.FindComponent('cadastro_tipo_documento') = Nil then
         Application.CreateForm(Tcadastro_tipo_documento, cadastro_tipo_documento);

  cadastro_tipo_documento.Show;
end;

procedure Tprincipal.TipoFotoClick(Sender: TObject);
begin
    If Application.FindComponent('cadastro_Tipo_Foto') = Nil then
         Application.CreateForm(Tcadastro_Tipo_Foto, cadastro_Tipo_Foto);

  cadastro_Tipo_Foto.Show;
end;

procedure Tprincipal.TipoManequimClick(Sender: TObject);
begin
  If Application.FindComponent('cadastro_Tipo_Manequim') = Nil then
         Application.CreateForm(Tcadastro_Tipo_Manequim, cadastro_Tipo_Manequim);

  cadastro_Tipo_Manequim.Show;
end;

procedure Tprincipal.TipoPerfilClick(Sender: TObject);
begin
  If Application.FindComponent('cadastro_Tipo_Perfil') = Nil then
         Application.CreateForm(Tcadastro_Tipo_Perfil, cadastro_Tipo_Perfil);

  cadastro_Tipo_Perfil.Show;
end;

procedure Tprincipal.trocade_usuarioClick(Sender: TObject);
begin
  If Application.FindComponent('acesso_sistema') = Nil then
         Application.CreateForm(Tacesso_sistema, acesso_sistema);

  acesso_sistema.ShowModal;

  AbilitarUsuario;
end;

procedure Tprincipal.trocar_senhaClick(Sender: TObject);
begin
  If Application.FindComponent('alterar_senha') = Nil then
         Application.CreateForm(Talterar_senha, alterar_senha);

  alterar_senha.ShowModal;
end;

procedure Tprincipal.AcompanhamentoPrevistoRealizado1Click(Sender: TObject);
begin
  If Application.FindComponent('frmAcompanhaPrevistoRealizado') = Nil then
         Application.CreateForm(TfrmAcompanhaPrevistoRealizado, frmAcompanhaPrevistoRealizado);

  frmAcompanhaPrevistoRealizado.Show;
end;

procedure Tprincipal.AcompanhaPedidoAgendaClick(Sender: TObject);
begin
  If Application.FindComponent('frmAcompanhaPedidoAgenda') = Nil then
         Application.CreateForm(TfrmAcompanhaPedidoAgenda, frmAcompanhaPedidoAgenda);

  frmAcompanhaPedidoAgenda.Show;
end;

procedure Tprincipal.AgendasClick(Sender: TObject);
begin
  If Application.FindComponent('frmAgenda') = Nil then
         Application.CreateForm(TfrmAgenda, frmAgenda);

  frmAgenda.cConfirmarHorario := False;
  frmAgenda.Show;
end;

procedure Tprincipal.Ajuda1Click(Sender: TObject);
begin

  Application.MessageBox(Pchar('AMV System 1.0'+#13+
                           'Uso exclusivo de: Achei Meu Vestido'+#13+
                           ''+#13+
                           'Analista: Junior Cezar Delgado'+#13+
                           'Telefone: 27 3219-1195 Celular: 27 99607-5888'+#13+
                           'E-mail: juniorcesarcontador@gmail.com'+#13+
                           ''+#13+
                           'Desenvolvedor: Fábio Sant Anna Maduro'#13+
                           'Celular: 27 99227-9544'+#13+
                           'E-mail: fsmaduro2013@gmail.com'+#13+
                           ''+#13+
                           'Desenvolvedor: Bruno Leone'#13+
                           'Celular: 27 99902-2010'+#13+
                           'E-mail: bruno.rodn@gmail.com'+#13+
                           ''+#13+
                           'Inicio do Desenvolvimento: Fevereiro de 2015'+#13+
                           'Previsão de Termino: Agosto de 2015'+#13+
                           'Complementa Primeira Fase do Projeto (Cadastros)'), 'Registro', MB_OK + MB_ICONINFORMATION);
end;

procedure Tprincipal.ApuraoMensal1Click(Sender: TObject);
begin
  If Application.FindComponent('frmApuracaoMensal') = Nil then
         Application.CreateForm(TfrmApuracaoMensal, frmApuracaoMensal);

  frmApuracaoMensal.Show;
end;

procedure Tprincipal.AraraClick(Sender: TObject);
begin
  If Application.FindComponent('frmARARAS') = Nil then
         Application.CreateForm(TfrmARARAS, frmARARAS);

  frmARARAS.Show;
end;

procedure Tprincipal.Avaliao1Click(Sender: TObject);
begin
  If Application.FindComponent('cadastro_Avaliacao') = Nil then
         Application.CreateForm(TCadastro_Avaliacao, Cadastro_Avaliacao);

  Cadastro_Avaliacao.Show;
end;

procedure Tprincipal.Backup1Click(Sender: TObject);
begin
  If Application.FindComponent('frmBackup') = Nil then
    Application.CreateForm(TfrmBackup, frmBackup);

  frmBackup.Show;
end;

procedure Tprincipal.Backup2Click(Sender: TObject);
begin
  If Application.FindComponent('frmConfigSincronismo') = Nil then
         Application.CreateForm(TfrmConfigSincronismo, frmConfigSincronismo);

  frmConfigSincronismo.Show;
end;

procedure Tprincipal.BancoClick(Sender: TObject);
begin
  If Application.FindComponent('cadastro_Banco') = Nil then
         Application.CreateForm(Tcadastro_Banco, cadastro_Banco);

  cadastro_Banco.Show;
end;

procedure Tprincipal.btnAlunosClick(Sender: TObject);
begin
  If Application.FindComponent('cadastro_perfil') = Nil then
         Application.CreateForm(Tcadastro_perfil, cadastro_perfil);

  cadastro_perfil.Show;
end;

procedure Tprincipal.btnCaixaClick(Sender: TObject);
begin
  If Application.FindComponent('frmAcompanhaContrato') = Nil then
         Application.CreateForm(TfrmAcompanhaContrato, frmAcompanhaContrato);

  frmAcompanhaContrato.Show;
end;

procedure Tprincipal.btnMaterialDidaticoClick(Sender: TObject);
begin
  AgendasClick(self);
end;

procedure Tprincipal.btnMovAlunosClick(Sender: TObject);
begin
  AcompanhaPedidoAgendaClick(self);
end;

procedure Tprincipal.btnSairClick(Sender: TObject);
begin
  close;
end;

procedure Tprincipal.cadastro_usuarioClick(Sender: TObject);
begin
  If Application.FindComponent('cadastro_usuarios') = Nil then
         Application.CreateForm(Tcadastro_usuarios, cadastro_usuarios);

  cadastro_usuarios.Show;
end;

procedure Tprincipal.Empresa1Click(Sender: TObject);
begin
  application.MessageBox('EM DESENVOLVIMENTO','EM DESENVOLVIMENTO',MB_OK+MB_ICONEXCLAMATION);
  Abort;

  If Application.FindComponent('cadastro_comunidade') = Nil then
         Application.CreateForm(Tcadastro_comunidade, cadastro_comunidade);

  cadastro_comunidade.Show;
end;

procedure Tprincipal.EventoClick(Sender: TObject);
begin
  If Application.FindComponent('cadastro_evento') = Nil then
         Application.CreateForm(Tcadastro_evento, cadastro_evento);

  cadastro_evento.Show;
end;

procedure Tprincipal.SituacaoProdutoClick(Sender: TObject);
begin
  If Application.FindComponent('cadastro_situacao_produto') = Nil then
         Application.CreateForm(Tcadastro_situacao_produto, cadastro_situacao_produto);

  cadastro_situacao_produto.Show;
end;

procedure Tprincipal.SituaodoProdutoClick(Sender: TObject);
begin
  If Application.FindComponent('cadastro_situacao_produto') = Nil then
         Application.CreateForm(Tcadastro_situacao_produto, cadastro_situacao_produto);

  cadastro_situacao_produto.Show;
end;

procedure Tprincipal.SpeedButton1Click(Sender: TObject);
begin
  If Application.FindComponent('cadastro_produto') = Nil then
         Application.CreateForm(Tcadastro_produto, cadastro_produto);

  cadastro_produto.Show;
end;

procedure Tprincipal.Municpios1Click(Sender: TObject);
begin
  If Application.FindComponent('cadastro_municipios') = Nil then
         Application.CreateForm(Tcadastro_municipios, cadastro_municipios);

  cadastro_municipios.Show;
end;

procedure Tprincipal.OrdemServicoClick(Sender: TObject);
begin
  If Application.FindComponent('frmAcompanhaOrdemServico') = Nil then
         Application.CreateForm(TfrmAcompanhaOrdemServico, frmAcompanhaOrdemServico);

  frmAcompanhaOrdemServico.Show;
end;

procedure Tprincipal.PaineldeContrato1Click(Sender: TObject);
begin
  If Application.FindComponent('frmAcompanhaContrato') = Nil then
         Application.CreateForm(TfrmAcompanhaContrato, frmAcompanhaContrato);

  frmAcompanhaContrato.Show;
end;

procedure Tprincipal.PaineldeOramento1Click(Sender: TObject);
begin
  If Application.FindComponent('frmPainelOrcamento') = Nil then
         Application.CreateForm(TfrmAcompanhaOrcamento, frmAcompanhaOrcamento);

  frmAcompanhaOrcamento.Show;
end;

procedure Tprincipal.PedidoAgendaClick(Sender: TObject);
begin
  If Application.FindComponent('cadastro_pedido_agenda') = Nil then
         Application.CreateForm(Tcadastro_pedido_agenda, cadastro_pedido_agenda);

  cadastro_pedido_agenda.Show;
end;

procedure Tprincipal.PlanodeContas1Click(Sender: TObject);
begin
  If Application.FindComponent('frmCadastroPlanoContas') = Nil then
         Application.CreateForm(TfrmCadastroPlanoContas, frmCadastroPlanoContas);

  frmCadastroPlanoContas.Show;
end;

procedure Tprincipal.PreferenciasClick(Sender: TObject);
begin
  If Application.FindComponent('cadastro_preferencia') = Nil then
         Application.CreateForm(Tcadastro_preferencia, cadastro_preferencia);

  cadastro_preferencia.Show;

end;

procedure Tprincipal.PrevisoOramento1Click(Sender: TObject);
begin
  If Application.FindComponent('frmPrevisaoOrcamento') = Nil then
         Application.CreateForm(TfrmPrevisaoOrcamento, frmPrevisaoOrcamento);

  frmPrevisaoOrcamento.Show;
end;

procedure Tprincipal.ProdutoClick(Sender: TObject);
begin
  If Application.FindComponent('cadastro_produto') = Nil then
         Application.CreateForm(Tcadastro_produto, cadastro_produto);

  cadastro_produto.Show;
end;

procedure Tprincipal.ProspectClick(Sender: TObject);
begin
  If Application.FindComponent('cadastro_prospect') = Nil then
    Application.CreateForm(Tcadastro_prospect, cadastro_prospect);

  cadastro_prospect.Show;
end;

procedure Tprincipal.Questionrio1Click(Sender: TObject);
begin
  If Application.FindComponent('Cadastro_Questionario') = Nil then
    Application.CreateForm(TCadastro_Questionario, Cadastro_Questionario);

  Cadastro_Questionario.Show;
end;

end.
